<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ReySun</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://reysun.github.io/"/>
  <updated>2019-10-12T13:44:18.816Z</updated>
  <id>https://reysun.github.io/</id>
  
  <author>
    <name>ReySun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>angular-cli怎么开启本地服务？</title>
    <link href="https://reysun.github.io/2017/08/29/angular-cli%E6%80%8E%E4%B9%88%E5%BC%80%E5%90%AF%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%EF%BC%9F/"/>
    <id>https://reysun.github.io/2017/08/29/angular-cli怎么开启本地服务？/</id>
    <published>2017-08-29T13:45:01.000Z</published>
    <updated>2019-10-12T13:44:18.816Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><blockquote><p>为什么会说怎么开启本地服务呢？angular/cli不是默认ng serve的时候有了一个localhost:4200了吗？是这样的：需求是可以让项目组内的其他开发人员可以在她的电脑上预览开发版本的ng应用，说大不大、说小不小，cli开启的localhost地址偏偏不属于本机的IPV4地址。比如我的电脑IPV4地址是192.168.3.108。正常的内网服务是可以用192.168.3.108替代localhost。但是…cli开启的服务偏偏就是访问不了。解决方案也很简单：</p></blockquote><ol><li><p>查看本机IPV4地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure></li><li><p>执行带参数的ng serve，具体参数前往<a href="https://github.com/angular/angular-cli/blob/master/docs/documentation/serve.md" target="_blank" rel="noopener">angular-cli</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng serve --host=你的IPV4地址</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么会说怎么开启本地服务呢？angular/cli不是默认ng serve的时候有了一个localhost:4200了吗？是这样的：需求是可以让项目组内的其他开发人员可以在她的电脑上预览开发版本的ng应用，说大
      
    
    </summary>
    
    
      <category term="Angular" scheme="https://reysun.github.io/categories/Angular/"/>
    
    
      <category term="angular-cli" scheme="https://reysun.github.io/tags/angular-cli/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript之正则匹配字符串的关键词与位置</title>
    <link href="https://reysun.github.io/2017/04/12/javascript%E4%B9%8B%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%85%B3%E9%94%AE%E8%AF%8D%E4%B8%8E%E4%BD%8D%E7%BD%AE/"/>
    <id>https://reysun.github.io/2017/04/12/javascript之正则匹配字符串关键词与位置/</id>
    <published>2017-04-11T16:16:23.000Z</published>
    <updated>2019-10-12T12:44:24.944Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="indexOf-lastIndexOf"><a href="#indexOf-lastIndexOf" class="headerlink" title="indexOf/lastIndexOf"></a>indexOf/lastIndexOf</h2><p>缺点：不支持正则。<br>如果找到，返回关键词的位置；如果找不到，返回-1。</p><table><thead><tr><th align="left">关键词</th><th align="left">位置</th></tr></thead><tbody><tr><td align="left">否：var i = str.indexOf(“关键词”,fromi)</td><td align="left">匹配从第fromi开始，向后找第一个关键词位置 i</td></tr><tr><td align="left">否：var i = str.lastIndexOf(“关键词”,fromi)</td><td align="left">匹配第从fromi开始，向前找第一个关键词位置 i</td></tr></tbody></table><h2 id="search"><a href="#search" class="headerlink" title="search"></a>search</h2><p>其实和indexOf差不多，只是不能指定fromi，默认是从第0个字符开始，向后找第一个关键词位置。<br>支持正则。<br>如果找到，返回关键词的位置；如果找不到，返回-1。</p><table><thead><tr><th align="left">关键词</th><th align="left">位置</th></tr></thead><tbody><tr><td align="left">否：var i = str.search(/正则/)</td><td align="left">匹配从0开始，向后找第一个关键词位置 i</td></tr></tbody></table><h2 id="match"><a href="#match" class="headerlink" title="match"></a>match</h2><p>强调: 只要一个方法可能返回null，就都要先验证不是null，再使用。<br>强调: 所有正则表达式默认只匹配一个关键词。除非在第二个/后加g,表示全部;加i表示忽略大小写。</p><table><thead><tr><th align="left">关键词</th><th align="left">位置</th></tr></thead><tbody><tr><td align="left">是 kwords[0] ：var kwords = str.match(/正则/)</td><td align="left">不加g的情况下才能匹配关键词位置 kwords.index</td></tr><tr><td align="left">是 kwords数组 ：var kwords = str.match(/正则/g)</td><td align="left">加g的情况下不能匹配关键词位置</td></tr></tbody></table><h2 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 正则直接量的特殊符号: 直接量中的/都要转为\/  */</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/正则/g</span>;</span><br><span class="line"><span class="comment">/* 用new的特殊符号: \ " '都要转义为:\\ \"  \' */</span></span><br><span class="line"><span class="comment">/* var red = new RegExp("正则","g") */</span></span><br><span class="line"><span class="keyword">var</span> arr=[];</span><br><span class="line"><span class="keyword">while</span>((arr=reg.exec(str))!=<span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arr);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"在位置"</span>+arr.index+<span class="string">"发现关键词"</span>+arr[<span class="number">0</span>]+<span class="string">"下次从"</span>+reg.lastIndex+<span class="string">"开始找"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">关键词</th><th align="left">位置</th></tr></thead><tbody><tr><td align="left">是 arr[0] ：arr=reg.exec(str)</td><td align="left">关键词位置 arr.index</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;indexOf-lastIndexOf&quot;&gt;&lt;a href=&quot;#indexOf-lastIndexOf&quot; class=&quot;headerlink&quot; title=&quot;indexOf/lastIndexOf&quot;&gt;&lt;/a&gt;indexOf/las
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://reysun.github.io/categories/JavaScript/"/>
    
    
      <category term="字符串正则" scheme="https://reysun.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript之正则表达式</title>
    <link href="https://reysun.github.io/2017/04/11/javascript%E4%B9%8B%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://reysun.github.io/2017/04/11/javascript之正则表达式/</id>
    <published>2017-04-11T13:38:10.000Z</published>
    <updated>2019-10-12T12:36:17.358Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="关键词原文"><a href="#关键词原文" class="headerlink" title="关键词原文"></a>关键词原文</h2><p>最简单的正则，就是关键词原文</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/hello/</span></span><br></pre></td></tr></table></figure><h2 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h2><p>字符集: 规定1位字符可用的备选字符的列表</p><table><thead><tr><th align="left">代码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">[A-Za-z]</td><td align="left">1位字母(若要区分大小写分开便是)</td></tr><tr><td align="left">[0-9]</td><td align="left">1位数字</td></tr><tr><td align="left">[\u4e00-\u9fa5]</td><td align="left">1位中文字符</td></tr></tbody></table><h2 id="预定义字符集"><a href="#预定义字符集" class="headerlink" title="预定义字符集"></a>预定义字符集</h2><p>预定义字符集: 对部分常用字符集的简化</p><table><thead><tr><th align="left">代码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">\w</td><td align="left">1位字母、数字、下划线 (相当于[A-Za-z0-9_])</td></tr><tr><td align="left">\d</td><td align="left">1位数字 (相当于[0-9])</td></tr><tr><td align="left">\s</td><td align="left">1位空字符 (空格、换行、Tab)</td></tr></tbody></table><h2 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h2><p>量词: 专门规定一个字符集出现次数的规则</p><table><thead><tr><th align="left">代码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">字符集{n,m}</td><td align="left">字符集可出现至少n次，最多m次</td></tr><tr><td align="left">字符集{n,}</td><td align="left">字符集至少出现n次，多了不限</td></tr><tr><td align="left">字符集{n}</td><td align="left">字符集必须出现n次</td></tr><tr><td align="left">字符集?</td><td align="left">可有可无，最多一次</td></tr><tr><td align="left">字符集*</td><td align="left">可有可无，多了不限</td></tr><tr><td align="left">字符集+</td><td align="left">至少一次，多个不限</td></tr></tbody></table><h2 id="分组和选择"><a href="#分组和选择" class="headerlink" title="分组和选择"></a>分组和选择</h2><table><thead><tr><th align="left">代码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">()</td><td align="left">分组: 将多个字符集用()包裹为一组</td></tr><tr><td align="left">&#124;</td><td align="left">选择: 规则1&#124;规则2只要满足其一即可</td></tr></tbody></table><h2 id="指定匹配位置"><a href="#指定匹配位置" class="headerlink" title="指定匹配位置"></a>指定匹配位置</h2><table><thead><tr><th align="left">代码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">^</td><td align="left">匹配字符串开始位置</td></tr><tr><td align="left">$</td><td align="left">匹配字符串结尾位置</td></tr><tr><td align="left">\b</td><td align="left">匹配单词的边界(只要匹配单词，必须前后加\b)</td></tr></tbody></table><h2 id="反义词"><a href="#反义词" class="headerlink" title="反义词"></a>反义词</h2><table><thead><tr><th align="left">代码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">.</td><td align="left">匹配除换行符以外的任意字符</td></tr><tr><td align="left">\W</td><td align="left">匹配任意不是字母，数字，下划线，汉字的字符</td></tr><tr><td align="left">\S</td><td align="left">匹配任意不是空白符的字符</td></tr><tr><td align="left">\D</td><td align="left">匹配任意非数字的字符</td></tr><tr><td align="left">\B</td><td align="left">匹配不是单词开头或结束的位置</td></tr><tr><td align="left">[^x]</td><td align="left">匹配除了x以外的任意字符</td></tr><tr><td align="left">[^Ab1]</td><td align="left">匹配除了Ab1这几个字符以外的任意字符</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;关键词原文&quot;&gt;&lt;a href=&quot;#关键词原文&quot; class=&quot;headerlink&quot; title=&quot;关键词原文&quot;&gt;&lt;/a&gt;关键词原文&lt;/h2&gt;&lt;p&gt;最简单的正则，就是关键词原文&lt;/p&gt;
&lt;figure class=&quot;highli
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://reysun.github.io/categories/JavaScript/"/>
    
    
      <category term="正则表达式" scheme="https://reysun.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>CSS3渐进增强解决方案</title>
    <link href="https://reysun.github.io/2017/04/06/CSS3%E6%B8%90%E8%BF%9B%E5%A2%9E%E5%BC%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://reysun.github.io/2017/04/06/CSS3渐进增强解决方案/</id>
    <published>2017-04-06T13:03:10.000Z</published>
    <updated>2019-10-12T12:43:52.505Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><blockquote><p>最近的项目需求中频繁的需要做兼容性处理，查阅了很多资料，最有含金量的当属<a href="http://w3help.org/zh-cn/kb/" target="_blank" rel="noopener">w3help.org</a>/<a href="http://jshop2013.jd.com" target="_blank" rel="noopener">jdshop店铺装修</a>，感谢前辈们栽的树，特地简单的记录常用的css3渐进增强方法，一是方便记忆，二是方便以后查阅修改，如果那里有不妥的地方，望指正。</p></blockquote><h1 id="opacity"><a href="#opacity" class="headerlink" title="opacity"></a>opacity</h1><h2 id="兼容方案"><a href="#兼容方案" class="headerlink" title="兼容方案"></a>兼容方案</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 方案一 */</span></span><br><span class="line"><span class="selector-class">.opacity</span>&#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.5</span>;                                                     <span class="comment">/*ie9+、现代浏览器*/</span></span><br><span class="line">    <span class="attribute">filter</span>:<span class="built_in">alpha</span>(opacity=50);                                         <span class="comment">/*ie6/7/8/9*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 方案二 */</span></span><br><span class="line"><span class="selector-class">.opacity</span>&#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">    <span class="attribute">filter</span>:progid:DXImageTransform.Microsoft.<span class="built_in">alpha</span>(opacity=50);       <span class="comment">/*ie6/7/8/9*/</span></span><br><span class="line">    <span class="attribute">-ms-filter</span>:<span class="string">"progid:DXImageTransform.Microsoft.Alpha(opacity=50)"</span>  <span class="comment">/*ie8/9*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* IE9下避免重复 */</span></span><br><span class="line"><span class="selector-pseudo">:root</span> <span class="selector-class">.opacity</span>&#123;<span class="attribute">filter</span>:none;&#125;</span><br></pre></td></tr></table></figure><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><ol><li>opacity不同于rgba，会连同该元素的所有子元素一起变透明。</li><li>在ie9下，如果opacity和Alpha滤镜同时使用，则Alpha滤镜透明会取代opacity，避免了重复透明的问题。可使用css3的伪类选择符将滤镜的透明度覆盖。</li></ol><h1 id="rgba"><a href="#rgba" class="headerlink" title="rgba"></a>rgba</h1><h2 id="兼容方案-1"><a href="#兼容方案-1" class="headerlink" title="兼容方案"></a>兼容方案</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.rgba</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(255, 0, 0, 0.5); <span class="comment">/* ie9+,FF,Safari,Opera,Chrome */</span></span><br><span class="line">    <span class="comment">/* IE6-IE9*/</span></span><br><span class="line">    <span class="attribute">filter</span>:progid:DXImageTransform.Microsoft.<span class="built_in">gradient</span>(startColorStr=<span class="string">'#80FF0000'</span>,EndColorStr=<span class="string">'#80FF0000'</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:root</span> <span class="selector-class">.rgba</span>&#123;<span class="attribute">filter</span>:none;&#125;</span><br></pre></td></tr></table></figure><h2 id="使用说明-1"><a href="#使用说明-1" class="headerlink" title="使用说明"></a>使用说明</h2><ol><li>ie滤镜中startColorStr和EndColorStr的前两位是Alpha通道值。Alpha通道值为16进制值.</li><li>由于10进制范围为0-255，可通过比例算法将rgba透明值转化为10进制值，再将10进制值转化为16进制值，确保ie滤镜的透明度和rgba的透明度一样。如将rgba透明值0.5转化为16进制值：0.5/1=x/255，x约等于128，128/16=8，则16进制值为80。加上rgba的前三个参数的RGB颜色值转换算为十六进制颜色码（如200,0,0转换为十六进制是：FF0000），则startColorStr和EndColorStr处为’#80FF0000’。</li><li>同上,在ie9下，使用css3的伪类选择符避免重复申明的问题。</li></ol><h1 id="border-radius"><a href="#border-radius" class="headerlink" title="border-radius"></a>border-radius</h1><h2 id="兼容方案-2"><a href="#兼容方案-2" class="headerlink" title="兼容方案"></a>兼容方案</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border-radius</span>&#123;</span><br><span class="line"><span class="attribute">-moz-border-radius</span>:<span class="number">10px</span>;</span><br><span class="line"><span class="attribute">-webkit-border-radius</span>:<span class="number">10px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>:<span class="number">10px</span>;<span class="comment">/*ie9+、现代浏览器*/</span></span><br><span class="line"><span class="attribute">behavior</span>:<span class="built_in">url</span>(此处为ie-css3.htc文件的绝对路径);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:root</span> <span class="selector-class">.border-radius</span>&#123;<span class="attribute">behavior</span>:<span class="built_in">url</span>(错误的ie-css3.htc文件路径);&#125;<span class="comment">/*ie6/7/8/9*/</span></span><br></pre></td></tr></table></figure><h2 id="使用说明-2"><a href="#使用说明-2" class="headerlink" title="使用说明"></a>使用说明</h2><ol><li><a href="https://www.baidu.com/baidu?tn=64075107_dg&ie=utf-8&wd=ie-css3.htc" target="_blank" rel="noopener">ie-css3.htc</a>是一个可以是老IE支持css3的某些属性的文件，需要自行下载引用。</li><li>只能同时4角圆角，不能单独设置某一个角。</li><li>由于ie9既支持border-radis属性，又支持htc这个文件，所以同时使用会造成圆角失效。这里可使用css3的伪类选择符重定义一个错误的路径将htc这个文件路径覆盖，重而使用ie9本身支持的border-radius圆角效果。</li></ol><h1 id="box-shadow"><a href="#box-shadow" class="headerlink" title="box-shadow"></a>box-shadow</h1><h2 id="兼容方案-3"><a href="#兼容方案-3" class="headerlink" title="兼容方案"></a>兼容方案</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 引入htc文件的方式 */</span></span><br><span class="line"><span class="selector-class">.box-shadow</span>&#123;</span><br><span class="line"><span class="attribute">-moz-box-shadow</span>:<span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">#333</span> inset;<span class="comment">/*必须写0px，而不是0*/</span></span><br><span class="line"><span class="attribute">-webkit-box-shadow</span>:<span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">#333</span> inset;</span><br><span class="line"><span class="attribute">box-shadow</span>:<span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">#333</span> inset;</span><br><span class="line"><span class="attribute">behavior</span>:<span class="built_in">url</span>(此处为ie-css3.htc文件的绝对路径);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:root</span> <span class="selector-class">.border-radius</span>&#123;<span class="attribute">behavior</span>:<span class="built_in">url</span>(错误的ie-css3.htc文件路径);&#125;</span><br><span class="line"><span class="comment">/* filter方式 */</span></span><br><span class="line"><span class="selector-class">.box-shadow</span>&#123;</span><br><span class="line"><span class="attribute">-moz-box-shadow</span>:<span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">#333</span> inset;</span><br><span class="line"><span class="attribute">-webkit-box-shadow</span>:<span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">#333</span> inset;</span><br><span class="line"><span class="attribute">box-shadow</span>:<span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">#333</span> inset;</span><br><span class="line"><span class="attribute">filter</span>: progid:DXImageTransform.Microsoft.<span class="built_in">Shadow</span>(Strength=4, Direction=135, Color=<span class="string">'#999999'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:root</span> <span class="selector-class">.box-shadow</span>&#123;<span class="attribute">filter</span>:none;&#125;</span><br></pre></td></tr></table></figure><h2 id="使用说明-3"><a href="#使用说明-3" class="headerlink" title="使用说明"></a>使用说明</h2><ol><li>htc文件模拟的阴影只读取了box-shadow里面设置的模糊半径值，且效果和box-shadow的效果有差异。<br>不支持inset内阴影。<br>阴影在IE中只会显示为黑色，不管你设置成其它什么颜色。</li><li>ie9下，如果box-shadow设置了inset属性，htc文件会造成元素的背景色失效，所以这里可使用css3的伪类选择符重定义一个错误的路径将htc这个文件路径覆盖，重而使用ie9本身支持的box-shadow内部阴影效果。</li><li>同样，引用filter方法也应该去重filter。</li></ol><h1 id="text-shadow"><a href="#text-shadow" class="headerlink" title="text-shadow"></a>text-shadow</h1><p>text-shadow的用法参考博主 水木 的这篇<a href="http://www.4u4v.net/realization-of-ie-similar-css3-text-shadow-text-shadow-of-several-methods.html" target="_blank" rel="noopener">博客</a>。有需求的时候记得来感谢感谢。</p><h1 id="transform"><a href="#transform" class="headerlink" title="transform"></a>transform</h1><p>直接看W3C的说明文档<a href="http://www.w3school.com.cn/cssref/pr_transform.asp" target="_blank" rel="noopener">transform</a></p><h1 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h1><p><a href="http://www.w3school.com.cn/cssref/pr_transition.asp" target="_blank" rel="noopener">transition</a></p><h1 id="animation"><a href="#animation" class="headerlink" title="animation"></a>animation</h1><p><a href="http://www.w3school.com.cn/cssref/pr_animation.asp" target="_blank" rel="noopener">animation</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;最近的项目需求中频繁的需要做兼容性处理，查阅了很多资料，最有含金量的当属&lt;a href=&quot;http://w3help.org/zh-cn/kb/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;w
      
    
    </summary>
    
    
      <category term="CSS" scheme="https://reysun.github.io/categories/CSS/"/>
    
    
      <category term="浏览器兼容性处理" scheme="https://reysun.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB常用增删改查语句</title>
    <link href="https://reysun.github.io/2017/02/24/mongodb%E5%B8%B8%E7%94%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"/>
    <id>https://reysun.github.io/2017/02/24/mongodb常用增删改查语句/</id>
    <published>2017-02-24T10:59:01.000Z</published>
    <updated>2019-10-12T12:36:50.889Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="数据库database"><a href="#数据库database" class="headerlink" title="数据库database"></a>数据库database</h2><h3 id="创建及查看库"><a href="#创建及查看库" class="headerlink" title="创建及查看库"></a>创建及查看库</h3><ol><li><p>有则使用这个数据库，没有就创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use DATABASE_NAME</span><br></pre></td></tr></table></figure></li><li><p>查看当前选择的数据库，默认是test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db</span><br></pre></td></tr></table></figure></li><li><p>查看数据库，默认有admin、local和”test”，如果数据库生成但是没有集合（下面会讲）所以此时只有逻辑数据库产生并没有真正意义上的物理数据，这样看不到查询结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show dbs</span><br></pre></td></tr></table></figure></li></ol><h3 id="删除库"><a href="#删除库" class="headerlink" title="删除库"></a>删除库</h3><ol><li>删除选定的数据库，如果还没有选择任何数据库，然后它会删除默认的 ‘ test’ 数据库，执行成功返回{ “dropped” : DATABASE_NAME, “ok” : 1 }<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure></li></ol><h2 id="集合collection-相当于SQL数据库中的表table"><a href="#集合collection-相当于SQL数据库中的表table" class="headerlink" title="集合collection(相当于SQL数据库中的表table)"></a>集合collection(相当于SQL数据库中的表table)</h2><h3 id="创建及查看集合"><a href="#创建及查看集合" class="headerlink" title="创建及查看集合"></a>创建及查看集合</h3><ol><li><p>查看集合</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show collections</span><br></pre></td></tr></table></figure></li><li><p>以下注释只为方便阅读，请勿在命令行使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(name, &#123; //集合的名字</span><br><span class="line">  capped: &lt;Boolean&gt;,        //是否启用集合限制，如果开启需要制定一个限制条件，默认为不启用，这个参数没有实际意义</span><br><span class="line">  autoIndexId: &lt;Boolean&gt;,   //是否使用_id作为索引，默认为使用(<span class="literal">true</span>或<span class="literal">false</span>)</span><br><span class="line">  size: &lt;number&gt;,           //限制集合使用空间的大小，默认为没有限制,size的优先级比max要高</span><br><span class="line">  max &lt;number&gt;&#125;             //集合中最大条数限制，默认为没有限制</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>特殊情况，若没有newdbc集合，会自动创建集合newdbc并插入数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.newdbc.insert(&#123;<span class="string">"name"</span> : <span class="string">"yiibai"</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>常用方法介绍</p></li></ol><ul><li><p><strong>没有任何的大小，数量限制，使用_id作为默认索引</strong>db.createCollection(name)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(<span class="string">"log"</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>限制它的空间大小为1M，如果超过1M的大小，则会删除最早的记录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(<span class="string">"log"</span>,&#123;size:1024&#125;)</span><br><span class="line">db.createCollection(<span class="string">"log"</span>，&#123;capped:<span class="literal">true</span>,size:1024&#125;)</span><br></pre></td></tr></table></figure></li><li><p><strong>最大条数为1024条，超过1024再插入数据的话会删除最早的一条记录。这个不能使用capped:true，否则会报错</strong>db.createCollection(name)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(<span class="string">"log"</span>,&#123;max:1024&#125;)</span><br></pre></td></tr></table></figure></li><li><p><strong>限制集合最大使用空间为1M，最大条数为1024条</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(<span class="string">"log"</span>,&#123;size:1024,max:1024&#125;)</span><br><span class="line">db.createCollection(<span class="string">"log"</span>,&#123;capped:<span class="literal">true</span>,size:1024,max:1024&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="删除集合"><a href="#删除集合" class="headerlink" title="删除集合"></a>删除集合</h3><ol><li>执行成功返回true，否则将返回 false<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.COLLECTION_NAME.drop()</span><br></pre></td></tr></table></figure></li></ol><h2 id="文档document-相当于SQL数据库中的列column"><a href="#文档document-相当于SQL数据库中的列column" class="headerlink" title="文档document(相当于SQL数据库中的列column)"></a>文档document(相当于SQL数据库中的列column)</h2><h3 id="增-insert"><a href="#增-insert" class="headerlink" title="增(insert)"></a>增(insert)</h3><ol><li><p>单条数据插入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.user.insert(&#123;<span class="string">"name"</span>:<span class="string">"jack"</span>,<span class="string">"age"</span>:20&#125;)</span><br></pre></td></tr></table></figure></li><li><p>批量数据插入采用命令行for循环</p></li></ol><h3 id="删-remove"><a href="#删-remove" class="headerlink" title="删(remove)"></a>删(remove)</h3><ol><li>不带参数会删除全部数据，且不可恢复，切记！<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.user.remove(&#123;<span class="string">"name"</span>:<span class="string">"joe"</span>&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="改-update"><a href="#改-update" class="headerlink" title="改(update)"></a>改(update)</h3><ol><li><p>整体更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var model = db.user.findOne(&#123;<span class="string">"name"</span>:<span class="string">"jack"</span>&#125;)</span><br><span class="line">model.age=30</span><br><span class="line">db.user.update(&#123;<span class="string">"name"</span>:<span class="string">"jack"</span>&#125;,model)</span><br></pre></td></tr></table></figure></li><li><p>局部更新</p></li></ol><ul><li><p>$inc修改器——比如我们做一个在线用户状态记录，每次修改会在原有的基础上自增$inc指定的值，如果“文档”中没有此key，则会创建key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.user.update(&#123;<span class="string">"name"</span>:<span class="string">"jack"</span>&#125;,&#123;<span class="variable">$inc</span>:&#123;<span class="string">"age"</span>:30&#125;&#125;) //年龄增加30</span><br></pre></td></tr></table></figure></li><li><p>$set修改器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.user.update(&#123;<span class="string">"name"</span>:<span class="string">"jack"</span>&#125;,&#123;<span class="variable">$set</span>:&#123;<span class="string">"age"</span>:10&#125;&#125;) //年龄变为10</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li>upsert操作——如果没有查到，就在数据库里面新增一条，使用起来很简单，将update的第三个参数设为true即可。</li><li>批量更新——在mongodb中如果匹配多条，默认的情况下只更新第一条，那么如果我们有需求必须批量更新，那么在mongodb中实现也是很简单的，在update的第四个参数中设为true即可</li></ol><h3 id="查-find"><a href="#查-find" class="headerlink" title="查(find)"></a>查(find)</h3><ol><li><p>查找key=value的数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : value &#125;)</span><br></pre></td></tr></table></figure></li><li><p>key &gt; value</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$gt</span>: value &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>key &lt; value</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$lt</span>: value &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>key &gt;= value</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$gte</span>: value &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>key &lt;= value</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$lte</span>: value &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>value1 &lt; key &lt;value2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$gt</span>: value1 , <span class="variable">$lt</span>: value2 &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>key &lt;&gt; value</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$ne</span>: value &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>取模运算，条件相当于key % 10 == 1 即key除以10余数为1的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$mod</span> : [ 10 , 1 ] &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>不属于，条件相当于key的值不属于[ 1, 2, 3 ]中任何一个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$nin</span>: [ 1, 2, 3 ] &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>属于，条件相当于key等于[ 1, 2, 3 ]中任何一个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$in</span>: [ 1, 2, 3 ] &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>$size 数量、尺寸，条件相当于key的值的数量是1（key必须是数组，一个值的情况不能算是数量为1的数组）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$size</span>: 1 &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>$exists 字段存在，true返回存在字段key的数据，false返回不存在字度key的数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span> : &#123; <span class="variable">$exists</span> : <span class="literal">true</span>|<span class="literal">false</span> &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>正则，类似like；“i”忽略大小写，“m”支持多行.如joe会匹配出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"name"</span>:/^j/,<span class="string">"name"</span>:/e$/ &#125;)</span><br></pre></td></tr></table></figure></li><li><p>$or或 （注意：MongoDB 1.5.3后版本可用），符合条件a=1的或者符合条件b=2的数据都会查询出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="variable">$or</span> : [&#123;a : 1&#125;, &#123;b : 2&#125; ] &#125;)</span><br></pre></td></tr></table></figure></li><li><p>符合条件key=value ，同时符合其他两个条件中任意一个的数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span>: value , <span class="variable">$or</span> : [&#123; a : 1 &#125; , &#123; b : 2 &#125;] &#125;)</span><br></pre></td></tr></table></figure></li><li><p>内嵌对象中的值匹配，注意：”key.subkey”必须加引号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key.subkey"</span> :value &#125;)</span><br></pre></td></tr></table></figure></li><li><p>这是一个与其他查询条件组合使用的操作符，不会单独使用。上述查询条件得到的结果集加上$not之后就能获得相反的集合。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="string">"key"</span>: &#123; <span class="variable">$not</span> : /^val.val$/i &#125; &#125;)</span><br></pre></td></tr></table></figure></li><li><p>$where中的value,可以写成类似js的形式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123; <span class="variable">$where</span>:<span class="function"><span class="title">function</span></span>()&#123;<span class="built_in">return</span> this.name==<span class="string">"joe"</span>&#125; &#125;)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;数据库database&quot;&gt;&lt;a href=&quot;#数据库database&quot; class=&quot;headerlink&quot; title=&quot;数据库database&quot;&gt;&lt;/a&gt;数据库database&lt;/h2&gt;&lt;h3 id=&quot;创建及查看库&quot;&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="Mongo" scheme="https://reysun.github.io/categories/Mongo/"/>
    
    
      <category term="mongodb" scheme="https://reysun.github.io/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB安装及环境配置</title>
    <link href="https://reysun.github.io/2017/02/24/mongodb%E5%AE%89%E8%A3%85%E4%B8%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://reysun.github.io/2017/02/24/mongodb安装与环境配置/</id>
    <published>2017-02-24T09:59:01.000Z</published>
    <updated>2019-10-12T12:36:40.749Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>首先，下载安装<a href="https://www.mongodb.com/" target="_blank" rel="noopener">MongoDB</a>，根据自己的电脑配置下载合适的版本（以下以win7为例），ok，下载之后我就安装到”D盘”，可以根据需要安装在其他位置。</p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>启动之前，我们要给mongodb指定一个文件夹，这里取名为”mongodb”，用来存放mongodb的数据。文件目录格式参考如下图，data下的db专门存放数据，log下的MongoDB.log为日志存放文件。<br><img src="http://ombhmgzal.bkt.clouddn.com/mongodb%E5%AD%98%E5%82%A8%E8%B7%AF%E5%BE%84.png" alt></p><h3 id="两个命令启动数据库"><a href="#两个命令启动数据库" class="headerlink" title="两个命令启动数据库"></a>两个命令启动数据库</h3><ul><li>mongod：是mongoDB数据库进程本身</li><li>mongo：是命令行shell客户端</li></ul><h3 id="进入到mongodb安装目录下的bin文件夹下-以下简称bin目录-。"><a href="#进入到mongodb安装目录下的bin文件夹下-以下简称bin目录-。" class="headerlink" title="进入到mongodb安装目录下的bin文件夹下(以下简称bin目录)。"></a>进入到mongodb安装目录下的bin文件夹下(以下简称bin目录)。</h3><p><img src="http://ombhmgzal.bkt.clouddn.com/mongodb%E5%90%AF%E5%8A%A8bash%E8%B7%AF%E5%BE%84.png" alt></p><h3 id="指定存储位置及开启服务"><a href="#指定存储位置及开启服务" class="headerlink" title="指定存储位置及开启服务"></a>指定存储位置及开启服务</h3><ul><li>这里的意思是：dbpath指数据存放位置，logpath指日志存放文件，并且安装windows服务(运行成功后，win7下直接开始菜单搜索服务，便可以查看“MongoDB”服务，最好改为自动启动或延迟启动)，这样可以避免每次敲很长的启动代码。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod --dbpath <span class="string">"E:\mongodb\data\db"</span> --logpath <span class="string">"E:\mongodb\data\log\MongoDB.log"</span> --install --serviceName <span class="string">"MongoDB"</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="启动成功"><a href="#启动成功" class="headerlink" title="启动成功"></a>启动成功</h3><ul><li><p>重新在bin目录下打开命令行，输入mongo（或者直接点击mongo.exe，看到connecting to: mongodb://127.0.0.1:27017）,至此就可以进行mongo的shell客户端操作了。</p><h3 id="如果你有单独的项目，想把数据库放在本地APP项目下。"><a href="#如果你有单独的项目，想把数据库放在本地APP项目下。" class="headerlink" title="如果你有单独的项目，想把数据库放在本地APP项目下。"></a>如果你有单独的项目，想把数据库放在本地APP项目下。</h3></li><li><p>可直接在项目顶层目录新建文件夹data，然后进入bin目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod  --dbpath 本地APP目录\data\</span><br></pre></td></tr></table></figure></li><li><p>再次进入bin目录，打开第二个命令行，此窗口进行mongo数据操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;下载安装&quot;&gt;&lt;a href=&quot;#下载安装&quot; class=&quot;headerlink&quot; title=&quot;下载安装&quot;&gt;&lt;/a&gt;下载安装&lt;/h2&gt;&lt;p&gt;首先，下载安装&lt;a href=&quot;https://www.mongodb.com/&quot; ta
      
    
    </summary>
    
    
      <category term="Mongo" scheme="https://reysun.github.io/categories/Mongo/"/>
    
    
      <category term="mongodb" scheme="https://reysun.github.io/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>CSS 边框三角形制作</title>
    <link href="https://reysun.github.io/2017/02/09/css%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
    <id>https://reysun.github.io/2017/02/09/css三角形/</id>
    <published>2017-02-09T04:55:10.000Z</published>
    <updated>2019-10-12T12:35:15.024Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>由浅入深的介绍border属性，方便记忆。内联样式只为便于观察，最好避免此写法，采用更优的方案。</p><h2 id="定义通用css"><a href="#定义通用css" class="headerlink" title="定义通用css"></a>定义通用css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="只有上边框"><a href="#只有上边框" class="headerlink" title="只有上边框"></a>只有上边框</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-top: 50px solid red;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：上下占50px，但是看不见实际颜色。<br><img src="http://ombhmgzal.bkt.clouddn.com/bdr-top.png" alt></p><h2 id="只有上下边框"><a href="#只有上下边框" class="headerlink" title="只有上下边框"></a>只有上下边框</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-top: 50px solid red;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-bottom: 50px solid blue;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：原理同上，上下占100px，看不见实际颜色。<br><img src="http://ombhmgzal.bkt.clouddn.com/bdr-top-but.png" alt></p><h2 id="只有上左下边框"><a href="#只有上左下边框" class="headerlink" title="只有上左下边框"></a>只有上左下边框</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-top: 50px solid red;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-bottom: 50px solid blue;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-left: 50px solid yellow;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：终于看见颜色了，说明必须相邻的边框搭配才会看见颜色。<br><img src="http://ombhmgzal.bkt.clouddn.com/bdr-top-lef-but.png" alt></p><h2 id="正上角"><a href="#正上角" class="headerlink" title="正上角"></a>正上角</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- triangle-up --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-left: 50px solid transparent;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-right: 50px solid transparent;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-bottom: 100px solid red;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：下边框100px，左右透明。<br><img src="http://ombhmgzal.bkt.clouddn.com/triangle-up.png" alt></p><h2 id="正下角"><a href="#正下角" class="headerlink" title="正下角"></a>正下角</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- triangle-down --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-left: 50px solid transparent;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-right: 50px solid transparent;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-top: 100px solid red;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：上边框100px，左右透明。<br><img src="http://ombhmgzal.bkt.clouddn.com/triangle-down.png" alt></p><h2 id="正左角"><a href="#正左角" class="headerlink" title="正左角"></a>正左角</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- triangle-left --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-top: 50px solid transparent;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-bottom: 50px solid transparent;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-right: 100px solid red;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：右边框100px，上下透明。<br><img src="http://ombhmgzal.bkt.clouddn.com/triangle-left.png" alt></p><h2 id="正右角"><a href="#正右角" class="headerlink" title="正右角"></a>正右角</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- triangle-right --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-top: 50px solid transparent;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-bottom: 50px solid transparent;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-left: 100px solid red;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：左边框100px，上下透明。<br><img src="http://ombhmgzal.bkt.clouddn.com/triangle-right.png" alt></p><hr><p>下面更精彩哦！</p><h2 id="左上角"><a href="#左上角" class="headerlink" title="左上角"></a>左上角</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- triangle-topleft --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-top: 100px solid red;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-right: 100px solid transparent;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-left: 100px solid red;</span></span></span><br><span class="line"><span class="tag"><span class="string">            border-bottom: 100px solid transparent;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：上面的两个div对应下面的两个角。<br><img src="http://ombhmgzal.bkt.clouddn.com/triangle-topleft.png" alt></p><hr><p>相信看到这里，你应该知道css边框的原理了，快快动手试试右上、左下、右下的三角形吧。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;由浅入深的介绍border属性，方便记忆。内联样式只为便于观察，最好避免此写法，采用更优的方案。&lt;/p&gt;
&lt;h2 id=&quot;定义通用css&quot;&gt;&lt;a href=&quot;#定义通用css&quot; class=&quot;headerlink&quot; title=&quot;定义通用
      
    
    </summary>
    
    
      <category term="CSS" scheme="https://reysun.github.io/categories/CSS/"/>
    
    
      <category term="边框三角形" scheme="https://reysun.github.io/tags/%E8%BE%B9%E6%A1%86%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript之API重构</title>
    <link href="https://reysun.github.io/2017/01/24/javascript%E4%B9%8BAPI%E9%87%8D%E6%9E%84/"/>
    <id>https://reysun.github.io/2017/01/24/javascript之API重构/</id>
    <published>2017-01-24T09:59:01.000Z</published>
    <updated>2019-10-12T12:36:33.743Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="检索indexOf"><a href="#检索indexOf" class="headerlink" title="检索indexOf"></a>检索indexOf</h2><p>方式一：添加函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">indexof</span>(<span class="params">arr,val,fromi</span>)</span>&#123;</span><br><span class="line">    fromi==<span class="literal">undefined</span>&amp;&amp;(fromi=<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(;fromi&lt;arr.length;fromi++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[fromi]==val)&#123;</span><br><span class="line">            <span class="keyword">return</span> fromi;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方式二：Array的原型上添加方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">Array</span>.prototype.indexOf===<span class="literal">undefined</span>)&#123;</span><br><span class="line">    <span class="built_in">Array</span>.prototype.indexOf=<span class="function"><span class="keyword">function</span>(<span class="params">val,fromi</span>)</span>&#123;</span><br><span class="line">        fromi===<span class="literal">undefined</span>&amp;&amp;(fromi=<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(;fromi&lt;<span class="keyword">this</span>.length;fromi++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>[fromi]==val)&#123;</span><br><span class="line">            <span class="keyword">return</span> fromi&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串排重"><a href="#字符串排重" class="headerlink" title="字符串排重"></a>字符串排重</h2><p>方法一</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique1</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>,new_arr=[];i&lt;<span class="number">2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;new_arr.length;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(new_arr[j]==arr[i])&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j==new_arr.length)&#123;</span><br><span class="line">            new_arr[j]=arr[i]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//console.log(new_arr[j])</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> new_arr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique2</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>,hash=[];i&lt;arr.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(hash[arr[i]]==<span class="literal">undefined</span>)&#123;hash[arr[i]]=<span class="number">1</span>;<span class="built_in">console</span>.log(hash);&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> i=<span class="number">0</span>,keys=[];</span><br><span class="line">    <span class="keyword">for</span>(keys[i++] <span class="keyword">in</span> hash);<span class="comment">//省略分号则表示循环一次，关联数组循环特殊性</span></span><br><span class="line">    <span class="comment">/*for(var k in hash)&#123;</span></span><br><span class="line"><span class="comment">        keys[i++]=k</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">return</span> keys</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="去除空格trim"><a href="#去除空格trim" class="headerlink" title="去除空格trim"></a>去除空格trim</h2><p>方式一：添加函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//去除左空格</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ltrim</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str.replace(<span class="regexp">/^\s+/</span>,<span class="string">""</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//去除右空格</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rtrim</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str.replace(<span class="regexp">/\s+$/</span>,<span class="string">""</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//去除左右两边的空格</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">trim</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str.replace(<span class="regexp">/^\s+|\s+$/</span>,<span class="string">""</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方式二：String的原型上添加方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">String</span>.prototype.trim==<span class="literal">undefined</span>)&#123;</span><br><span class="line">    <span class="built_in">String</span>.prototype.trim=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.replace(<span class="regexp">/^\s+|\s+$/g</span>,<span class="string">""</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> str=<span class="string">"  dd  xx  "</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.trim())</span><br></pre></td></tr></table></figure><h2 id="四舍五入round"><a href="#四舍五入round" class="headerlink" title="四舍五入round"></a>四舍五入round</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">round</span>(<span class="params">num,d</span>)</span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    num=num*Math.pow(10,d);</span></span><br><span class="line"><span class="comment">    num=parseInt(Math.round(num));</span></span><br><span class="line"><span class="comment">    num=num*Math.pow(10,-d);</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    num=<span class="built_in">Math</span>.round(num*<span class="built_in">Math</span>.pow(<span class="number">10</span>,d))</span><br><span class="line">        /<span class="built_in">Math</span>.pow(<span class="number">10</span>,d)</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="isArray"><a href="#isArray" class="headerlink" title="isArray"></a>isArray</h2><p>isArray是ES5新属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">Array</span>.isArray==<span class="literal">undefined</span>)&#123;</span><br><span class="line">    <span class="built_in">Array</span>.isArray=<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">Object</span>.prototype.toString.call(obj)==<span class="string">"[object Array]"</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> n=<span class="number">1</span>,s=<span class="string">"hello"</span>,b=<span class="literal">true</span>,nu=<span class="literal">null</span>,un=<span class="literal">undefined</span>,fun=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,obj=&#123;&#125;,arr=[],obj2=&#123;&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(</span><br><span class="line">    <span class="built_in">Array</span>.isArray(obj),</span><br><span class="line">    <span class="built_in">Array</span>.isArray(arr),</span><br><span class="line">    <span class="built_in">Array</span>.isArray(obj2)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h2><p>创建bind函数，兼容IE 8</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">Function</span>.prototype.bind===<span class="literal">undefined</span>)&#123;</span><br><span class="line">    <span class="built_in">Function</span>.prototype.bind=<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//this-&gt;原函数对象</span></span><br><span class="line">        <span class="keyword">var</span> fun=<span class="keyword">this</span>;</span><br><span class="line">        <span class="comment">//将arguments转化为纯正的数组，选取1之后的所有元素</span></span><br><span class="line">        <span class="keyword">var</span> args1=<span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>,<span class="number">1</span>);<span class="comment">//arguments.slice(1)</span></span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> args2=<span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</span><br><span class="line">            fun.apply(obj,args1.concat(args2))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进制转换num-toString-n"><a href="#进制转换num-toString-n" class="headerlink" title="进制转换num.toString(n)"></a>进制转换num.toString(n)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dec2bin</span>(<span class="params">dec</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bin=[];</span><br><span class="line">    <span class="keyword">while</span>(dec&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        bin.unshift(dec%<span class="number">2</span>);</span><br><span class="line">        dec=<span class="built_in">parseInt</span>(dec/<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bin.join(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> n=<span class="number">90</span>;</span><br><span class="line"><span class="built_in">console</span>.log(dec2bin(n));</span><br><span class="line"><span class="built_in">console</span>.log(n.toString(<span class="number">2</span>));</span><br></pre></td></tr></table></figure><h2 id="every-和some"><a href="#every-和some" class="headerlink" title="every()和some()"></a>every()和some()</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1=[<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>];</span><br><span class="line"><span class="keyword">var</span> arr2=[<span class="number">2</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">10</span>];</span><br><span class="line"><span class="keyword">var</span> arr3=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">Array</span>.prototype.every===<span class="literal">undefined</span>)&#123;</span><br><span class="line">    <span class="built_in">Array</span>.prototype.every=<span class="function"><span class="keyword">function</span>(<span class="params">call</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i <span class="keyword">in</span> <span class="keyword">this</span>)&#123;<span class="comment">//arr["0"]</span></span><br><span class="line">            <span class="comment">//if(this[i]!==undefined)&#123;</span></span><br><span class="line">                <span class="keyword">var</span> r=call(<span class="keyword">this</span>[i],i,<span class="keyword">this</span>)</span><br><span class="line">                <span class="keyword">if</span>(!r)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">Array</span>.prototype.some===<span class="literal">undefined</span>)&#123;</span><br><span class="line">    <span class="built_in">Array</span>.prototype.some=<span class="function"><span class="keyword">function</span>(<span class="params">call</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="keyword">this</span>.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i <span class="keyword">in</span> <span class="keyword">this</span>)&#123;<span class="comment">//arr["0"]</span></span><br><span class="line">            <span class="comment">//if(this[i]!==undefined)&#123;</span></span><br><span class="line">                <span class="keyword">var</span> r=call(<span class="keyword">this</span>[i],i,<span class="keyword">this</span>)</span><br><span class="line">                <span class="keyword">if</span>(!r)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(</span><br><span class="line">    arr1.every(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val%<span class="number">2</span>==<span class="number">1</span></span><br><span class="line">    &#125;)+<span class="string">"&lt;br&gt;"</span>+</span><br><span class="line">    arr2.every(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val%<span class="number">2</span>==<span class="number">1</span></span><br><span class="line">    &#125;)+<span class="string">"&lt;br&gt;"</span>+</span><br><span class="line">    arr3.every(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val%<span class="number">2</span>==<span class="number">1</span></span><br><span class="line">    &#125;)</span><br><span class="line">);</span><br><span class="line"><span class="built_in">console</span>.log(</span><br><span class="line">    arr1.some(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val%<span class="number">2</span>==<span class="number">1</span></span><br><span class="line">    &#125;)+<span class="string">"&lt;br&gt;"</span>+</span><br><span class="line">    arr2.some(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val%<span class="number">2</span>==<span class="number">1</span></span><br><span class="line">    &#125;)+<span class="string">"&lt;br&gt;"</span>+</span><br><span class="line">    arr3.some(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val%<span class="number">2</span>==<span class="number">1</span></span><br><span class="line">    &#125;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(</span><br><span class="line">    arr1.every(<span class="function"><span class="keyword">function</span>(<span class="params">val,idx,arr</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> idx&lt;arr.length<span class="number">-1</span>?val&lt;=arr[idx+<span class="number">1</span>]:<span class="literal">true</span></span><br><span class="line">    &#125;)+<span class="string">"&lt;br&gt;"</span>+</span><br><span class="line">    arr2.every(<span class="function"><span class="keyword">function</span>(<span class="params">val,idx,arr</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> idx&lt;arr.length<span class="number">-1</span>?val&lt;=arr[idx+<span class="number">1</span>]:<span class="literal">true</span></span><br><span class="line">    &#125;)+<span class="string">"&lt;br&gt;"</span>+</span><br><span class="line">    arr3.every(<span class="function"><span class="keyword">function</span>(<span class="params">val,idx,arr</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> idx&lt;arr.length<span class="number">-1</span>?val&lt;=arr[idx+<span class="number">1</span>]:<span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;检索indexOf&quot;&gt;&lt;a href=&quot;#检索indexOf&quot; class=&quot;headerlink&quot; title=&quot;检索indexOf&quot;&gt;&lt;/a&gt;检索indexOf&lt;/h2&gt;&lt;p&gt;方式一：添加函数&lt;/p&gt;
&lt;figure cla
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://reysun.github.io/categories/JavaScript/"/>
    
    
      <category term="API重构" scheme="https://reysun.github.io/tags/API%E9%87%8D%E6%9E%84/"/>
    
  </entry>
  
</feed>
